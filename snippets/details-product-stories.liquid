<section class="container-view-storie close">
  <div class="daily-stories">
    <div class="daily-stories__container">
      <div class="slide active">
        <img id="daily-stories-image" alt="imagem storie" />
      </div>
    </div>
    <div class="progress-bars" id="progress-bars"></div>
    <span class="storie-button-close" onClick="toggleStorie()">
      <img src="{{ 'icon_x.svg' | asset_url }}">
    </span>
  </div>
</section>

<script>
  const storieImage = document.querySelector('#daily-stories-image');
  const storieProgress = document.querySelector('#progress-bars');
  const imageUrls = [];
  let storieIndex = 0;

  const getImages = () => {
    const regex = /STORIES:\s*([\s\S]*?)(?=#|$)/gi;
    const match = regex.exec(`{{ product.description }}`);

    if (match && match.length > 1) {
      const storiesText = match[1].trim();
      const storiesArray = storiesText.split('\n');
      for (let i = 0; i < storiesArray.length; i++) {
        const url = storiesArray[i].trim();
        if (url !== '') imageUrls.push(url);
      }
    }
  };

  const nextStorie = () => {
    if (storieIndex === (imageUrls.length - 1)) {
      resetProgress();
    } else {
      ++storieIndex;
    }

    if (storieImage) storieImage.src = imageUrls[storieIndex];
  };

  const startStories = () => {
    storieImage.src = imageUrls[0];

    let currentTime = 0;
    const storieDuration = 4;
    const updateInterval = 100;

    for (let i = 0; i < imageUrls.length; i++) {
      storieProgress.innerHTML += `
        <div class="bar">
          <span class="indicator" data-storie-indicator="${i}"></span>
        </div>
      `;
    }
    storieProgress.setAttribute('data-count', imageUrls.length);

    const updateProgress = () => {
      currentTime += updateInterval / 1000;

      const completionRatio = currentTime / storieDuration;
      const indicator = document.querySelector(`[data-storie-indicator="${storieIndex}"]`);

      if (indicator) indicator.style.width = `${completionRatio * 100}%`;

      if (currentTime >= storieDuration) {
        nextStorie(true);
        currentTime = 0;
      }
    };

    setInterval(updateProgress, updateInterval);
  };

  const resetProgress = () => {
    const indicators = document.querySelectorAll(`.indicator`);
    indicators.forEach(indicator => indicator.style.width = '0');
    storieIndex = 0;
  };

  const toggleStorie = () => {
    document.querySelector(`.container-view-storie`)?.classList?.toggle('close');
  }

  getImages();
  startStories();
</script>

<style>
  .container-view-storie {
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    background-color: rgba(0, 0, 0, 0.85);
    z-index: 10;
    display: flex;
    justify-content: center;
    padding: 20px 0;
  }

  .container-view-storie.close {
    display: none;
  }

  .daily-stories {
    width: 56.25vh;
    max-width: 100vw;
    overflow: hidden;
    position: relative;
    border-radius: 12px;
  }

  .slide {
    position: relative;
    display: block;
    width: 56.25vh;
    max-width: 100vw;
    max-height: 100vh;
    overflow: hidden;
    transition: opacity 0.5s ease, filter 0.25s ease;
  }

  .slide.active img {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
  }

  .progress-bars {
    position: absolute;
    padding: 10px 5px 87px;
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;
    display: flex;
  }

  .progress-bars::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
    background: linear-gradient(rgba(0, 0, 0, 0.5), transparent);
  }

  .progress-bars[data-count="1"] .bar {
    width: calc(100% - 6px);
  }

  .progress-bars[data-count="2"] .bar {
    width: calc(100% / 2 - 6px);
  }

  .progress-bars[data-count="3"] .bar {
    width: calc(100% / 3 - 6px);
  }

  .progress-bars[data-count="4"] .bar {
    width: calc(100% / 4 - 6px);
  }

  .progress-bars[data-count="5"] .bar {
    width: calc(100% / 5 - 6px);
  }

  .progress-bars[data-count="6"] .bar {
    width: calc(100% / 6 - 6px);
  }

  .progress-bars[data-count="7"] .bar {
    width: calc(100% / 7 - 6px);
  }

  .progress-bars[data-count="8"] .bar {
    width: calc(100% / 8 - 6px);
  }

  .progress-bars[data-count="9"] .bar {
    width: calc(100% / 9 - 6px);
  }

  .progress-bars[data-count="10"] .bar {
    width: calc(100% / 10 - 6px);
  }

  .progress-bars[data-count="11"] .bar {
    width: calc(100% / 11 - 6px);
  }

  .progress-bars[data-count="12"] .bar {
    width: calc(100% / 12 - 6px);
  }

  .progress-bars[data-count="13"] .bar {
    width: calc(100% / 13 - 6px);
  }

  .progress-bars[data-count="14"] .bar {
    width: calc(100% / 14 - 6px);
  }

  .progress-bars[data-count="15"] .bar {
    width: calc(100% / 15 - 6px);
  }

  .progress-bars[data-count="16"] .bar {
    width: calc(100% / 16 - 6px);
  }

  .progress-bars[data-count="17"] .bar {
    width: calc(100% / 17 - 6px);
  }

  .progress-bars[data-count="18"] .bar {
    width: calc(100% / 18 - 6px);
  }

  .progress-bars[data-count="19"] .bar {
    width: calc(100% / 19 - 6px);
  }

  .progress-bars[data-count="20"] .bar {
    width: calc(100% / 20 - 6px);
  }

  .bar {
    display: block;
    position: relative;
    border-radius: 3px;
    height: 3px;
    margin: 0 3px;
    cursor: pointer;
    overflow: hidden;
    background-color: rgba(255, 255, 255, 0.4);
  }

  .bar span {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
    height: 100%;
    width: 0;
    border-radius: 3px;
    background-color: #fff;
  }

  .bar.seen span {
    transform: translateX(0%) rotate(0deg);
  }

  .bar.animate span {
    animation: bar 0s 0s linear both;
  }

  .storie-button-close {
    position: absolute;
    top: 24px;
    right: 12px;
    cursor: pointer;
  }

  .storie-button-close img {
    width: 16px;
    height: 16px;
  }
</style>